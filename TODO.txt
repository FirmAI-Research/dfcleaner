change_dtypes from float to int doesn't work

convert dtype of all the non continuous (categorical with numbers or strings)
columns to 'category'

drop column if too many missing values
also, drop columns like 'id' or 'name' or anything similar

One-hot encode categorical columns

scale and normalize the data in dfcleaner

maybe add train test split functionality

determine which columns need to change their dtype from 
string to float by picking 10 random samples from that
column and trying to parse it as float (float(value)).
If the majority of them get converted to float then the 
dtype may be converted to float.
eg: a numeric column might have a '?' instead of np.nan

determine categorical and continuous columns by
looking at column names with their count
of unique values in descending order.

add logging functionality to generate log files that
stores the line changes and the function that changed them. 
Just like git diff.

(multi-column method)
to fill nan, predict from a linear regression model where
y is the nan column (column to predict) and x is the column
that is most correlated to y.

(single-column method)
to fill nan, sample from the column
